name: CD

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  libraries:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Windows static library (Intel) (Release)'
            os: windows-2022
            arch: amd64
            build_type: Release
            shared_libs: OFF
          - name: 'Windows shared library (Intel) (Release)'
            os: windows-2022
            arch: amd64
            build_type: Release
            shared_libs: ON
          - name: 'Windows shared library (Intel) (Debug)'
            os: windows-2022
            arch: amd64
            build_type: Debug
            shared_libs: ON
          - name: 'Windows static library (ARM) (Release)'
            os: windows-2022
            arch: amd64_arm64
            build_type: Release
            shared_libs: OFF
          - name: 'Windows shared library (ARM) (Release)'
            os: windows-2022
            arch: amd64_arm64
            build_type: Release
            shared_libs: ON
          - name: 'Windows shared library (ARM) (Debug)'
            os: windows-2022
            arch: amd64_arm64
            build_type: Debug
            shared_libs: ON
          - name: 'Linux static library (Intel)'
            os: ubuntu-22.04
            build_type: Release
            shared_libs: OFF
          - name: 'Linux shared library (Intel)'
            os: ubuntu-22.04
            build_type: Release
            shared_libs: ON
          - name: 'Linux static library (ARM)'
            os: ubuntu-22.04-arm
            build_type: Release
            shared_libs: OFF
          - name: 'Linux shared library (ARM)'
            os: ubuntu-22.04-arm
            build_type: Release
            shared_libs: ON
          - name: 'macOS static library (Intel)'
            os: macos-14
            arch: Intel # Only used for buildcache's cache key.
            build_type: Release
            shared_libs: OFF
            target_arch: " -DTARGET_ARCHITECTURE=Intel"
          - name: 'macOS shared library (Intel)'
            os: macos-14
            arch: Intel # Only used for buildcache's cache key.
            build_type: Release
            shared_libs: ON
            target_arch: " -DTARGET_ARCHITECTURE=Intel"
          - name: 'macOS static library (ARM)'
            os: macos-14
            arch: ARM # Only used for buildcache's cache key.
            build_type: Release
            shared_libs: OFF
          - name: 'macOS shared library (ARM)'
            os: macos-14
            arch: ARM # Only used for buildcache's cache key.
            build_type: Release
            shared_libs: ON
    env:
      BUILDCACHE_ACCURACY: STRICT
      BUILDCACHE_COMPRESS_FORMAT: ZSTD
      BUILDCACHE_DEBUG: -1
      BUILDCACHE_LOG_FILE: ""
    steps:
      - name: Set the timezone to New Zealand
        uses: szenius/set-timezone@v2.0
        with:
          timezoneWindows: 'New Zealand Standard Time'
          timezoneLinux: 'Pacific/Auckland'
          timezoneMacos: 'Pacific/Auckland'
      - name: Check out libOpenCOR
        uses: actions/checkout@v4
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install buildcache
        uses: opencor/buildcache-action@v1
        with:
          cache_key: cd-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.build_type }}-${{ matrix.shared_libs }}
      - name: Configure MSVC
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Configure libOpenCOR
        run: |
          mkdir build
          cd build
          cmake -G Ninja ${{ matrix.target_arch }} -DBUILD_TYPE=${{ matrix.build_type }} -DCODE_ANALYSIS=OFF -DCODE_COVERAGE=OFF -DDOCUMENTATION=OFF -DJAVASCRIPT_BINDINGS=OFF -DMEMORY_CHECKS=OFF -DPYTHON_BINDINGS=OFF -DPYTHON_UNIT_TESTING=OFF -DSHARED_LIBS=${{ matrix.shared_libs }} -DUNIT_TESTING=OFF ..
      - name: Build libOpenCOR
        run: |
          cd build
          ninja
      - name: Package libOpenCOR
        run: |
          cd build
          cpack
      - name: Upload libOpenCOR artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ./build/libOpenCOR-*
      - name: Release libOpenCOR
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v2
        with:
          files: ./build/libOpenCOR-*
  python_wheels:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Windows Python wheels (Intel)'
            os: windows-2022
            arch: amd64
          - name: 'Windows Python wheels (ARM)'
            os: windows-2022
            arch: amd64_arm64
          - name: 'Linux Python wheels (Intel)'
            os: ubuntu-22.04
          - name: 'Linux Python wheels (ARM)'
            os: ubuntu-22.04-arm
          - name: 'macOS Python wheels (Intel)'
            os: macos-13
          - name: 'macOS Python wheels (ARM)'
            os: macos-14
    steps:
      - name: Set the timezone to New Zealand
        uses: szenius/set-timezone@v2.0
        with:
          timezoneWindows: 'New Zealand Standard Time'
          timezoneLinux: 'Pacific/Auckland'
          timezoneMacos: 'Pacific/Auckland'
      - name: Check out libOpenCOR
        uses: actions/checkout@v4
      - name: Configure MSVC
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Build Python wheels
        uses: pypa/cibuildwheel@9c75ea15c2f31a77e6043b80b1b7081372319d85
        env:
          CIBW_ARCHS: auto64
          CIBW_BUILD: 'cp*'
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=13.0
          # Note #1: the value of CIBW_ENVIRONMENT_MACOS must be in sync with that of MACOS_DEPLOYMENT_TARGET in
          #          CMakelists.txt.
          # Note #2: for some reasons, we need to specify the minor version, hence using 13.0 instead of 13.
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_34
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_34
          CIBW_SKIP: 'cp36* cp37* cp38* *musllinux*'
      - name: Upload Python wheel artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ./wheelhouse/*.whl
      - name: Release Python wheels
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v2
        with:
          files: ./wheelhouse/*.whl
  webassembly:
    name: WebAssembly
    runs-on: macos-14
    env:
      BUILDCACHE_ACCURACY: STRICT
      BUILDCACHE_COMPRESS_FORMAT: ZSTD
      BUILDCACHE_DEBUG: -1
      BUILDCACHE_LOG_FILE: ""
    steps:
      - name: Set the timezone to New Zealand
        uses: szenius/set-timezone@v2.0
        with:
          timezoneMacos: 'Pacific/Auckland'
      - name: Check out libOpenCOR
        uses: actions/checkout@v4
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install buildcache
        uses: opencor/buildcache-action@v1
        with:
          cache_key: cd-webassembly
      - name: Install Emscripten
        run: brew install emscripten
      - name: Configure libOpenCOR
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DBUILD_TYPE=Release -DCODE_ANALYSIS=OFF -DCODE_COVERAGE=OFF -DDOCUMENTATION=OFF -DJAVASCRIPT_BINDINGS=ON -DJAVASCRIPT_UNIT_TESTING=OFF -DMEMORY_CHECKS=OFF -DPYTHON_BINDINGS=OFF -DPYTHON_UNIT_TESTING=OFF -DSHARED_LIBS=OFF -DUNIT_TESTING=OFF ..
      - name: Build WebAssembly
        run: |
          cd build
          ninja
      - name: Upload WebAssembly artifact
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: WebAssembly
          path: ./build/libopencor-*
      - name: Release WebAssembly
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v2
        with:
          files: ./build/libopencor-*
